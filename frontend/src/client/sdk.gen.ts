// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, formDataBodySerializer } from './client';
import type { ReadRootGetData, ReadRootGetResponses, GetMeApiV1UserGetData, GetMeApiV1UserGetResponses, GetToolsApiV1ToolsGetData, GetToolsApiV1ToolsGetResponses, GetToolsApiV1ToolsGetErrors, GetToolByIdApiV1ToolsToolIdGetData, GetToolByIdApiV1ToolsToolIdGetResponses, GetToolByIdApiV1ToolsToolIdGetErrors, NewConversationApiV1ConversationsNewPostData, NewConversationApiV1ConversationsNewPostResponses, GetConversationsApiV1ConversationsGetData, GetConversationsApiV1ConversationsGetResponses, GetConversationApiV1ConversationsConversationIdGetData, GetConversationApiV1ConversationsConversationIdGetResponses, GetConversationApiV1ConversationsConversationIdGetErrors, GenerateCompletionApiV1CompletionPostData, GenerateCompletionApiV1CompletionPostResponses, GenerateCompletionApiV1CompletionPostErrors, UploadFileApiV1FilesUploadPostData, UploadFileApiV1FilesUploadPostResponses, UploadFileApiV1FilesUploadPostErrors, GetFilesApiV1FilesGetData, GetFilesApiV1FilesGetResponses, VectorizeFilesApiV1FilesFileIdVectorizePostData, VectorizeFilesApiV1FilesFileIdVectorizePostResponses, VectorizeFilesApiV1FilesFileIdVectorizePostErrors, GetAvailableAgentsApiV1AgentsGetData, GetAvailableAgentsApiV1AgentsGetResponses, GetAvailableAgentsApiV1AgentsGetErrors, GetAgentApiV1AgentsAgentIdVersionAgentVersionGetData, GetAgentApiV1AgentsAgentIdVersionAgentVersionGetResponses, GetAgentApiV1AgentsAgentIdVersionAgentVersionGetErrors, PublishAgentApiV1AgentsPublishPostData, PublishAgentApiV1AgentsPublishPostResponses, PublishAgentApiV1AgentsPublishPostErrors, ModifyAgentApiV1AgentsAgentIdPutData, ModifyAgentApiV1AgentsAgentIdPutResponses, ModifyAgentApiV1AgentsAgentIdPutErrors, GetRecommendationsApiV1RecommendationsGetData, GetRecommendationsApiV1RecommendationsGetResponses, CreateRecommendationApiV1RecommendationsPostData, CreateRecommendationApiV1RecommendationsPostResponses, CreateRecommendationApiV1RecommendationsPostErrors, DeleteRecommendationApiV1RecommendationsRecommendationIdDeleteData, DeleteRecommendationApiV1RecommendationsRecommendationIdDeleteResponses, DeleteRecommendationApiV1RecommendationsRecommendationIdDeleteErrors, GetRecommendationByIdApiV1RecommendationsRecommendationIdGetData, GetRecommendationByIdApiV1RecommendationsRecommendationIdGetResponses, GetRecommendationByIdApiV1RecommendationsRecommendationIdGetErrors, ChatCompletionWithAgentApiV1RecommendationsRecommendationIdCompletionPostData, ChatCompletionWithAgentApiV1RecommendationsRecommendationIdCompletionPostResponses, ChatCompletionWithAgentApiV1RecommendationsRecommendationIdCompletionPostErrors, GetConversationByRecommendationApiV1RecommendationsRecommendationIdConversationsGetData, GetConversationByRecommendationApiV1RecommendationsRecommendationIdConversationsGetResponses, GetConversationByRecommendationApiV1RecommendationsRecommendationIdConversationsGetErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Root Endpoint
 * Welcome endpoint for the API. Returns a welcome message.
 */
export const readRootGet = <ThrowOnError extends boolean = false>(options?: Options<ReadRootGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ReadRootGetResponses, unknown, ThrowOnError>({
        url: '/',
        ...options
    });
};

/**
 * Get User Information
 * Retrieves information about the current user.
 */
export const getMeApiV1UserGet = <ThrowOnError extends boolean = false>(options?: Options<GetMeApiV1UserGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetMeApiV1UserGetResponses, unknown, ThrowOnError>({
        url: '/api/v1/user',
        ...options
    });
};

/**
 * Get Tools
 * ## Retrieves all available tools.
 *
 * This API endpoint retrieves a list of all tools available in the system.
 * It does not require any parameters and returns a list of tools with their details.
 */
export const getToolsApiV1ToolsGet = <ThrowOnError extends boolean = false>(options?: Options<GetToolsApiV1ToolsGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetToolsApiV1ToolsGetResponses, GetToolsApiV1ToolsGetErrors, ThrowOnError>({
        url: '/api/v1/tools',
        ...options
    });
};

/**
 * Get Tool by ID
 * ## Retrieves a tool by its ID.
 *
 * This API endpoint retrieves a tool by its unique identifier (ID).
 * It requires the tool ID as a path parameter and returns the tool's details.
 */
export const getToolByIdApiV1ToolsToolIdGet = <ThrowOnError extends boolean = false>(options: Options<GetToolByIdApiV1ToolsToolIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetToolByIdApiV1ToolsToolIdGetResponses, GetToolByIdApiV1ToolsToolIdGetErrors, ThrowOnError>({
        url: '/api/v1/tools/{tool_id}',
        ...options
    });
};

/**
 * New Conversation
 * Creates a new conversation for the current user.
 */
export const newConversationApiV1ConversationsNewPost = <ThrowOnError extends boolean = false>(options?: Options<NewConversationApiV1ConversationsNewPostData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<NewConversationApiV1ConversationsNewPostResponses, unknown, ThrowOnError>({
        url: '/api/v1/conversations/new',
        ...options
    });
};

/**
 * Get User Conversations
 * Retrieves Conversations for the current user.
 */
export const getConversationsApiV1ConversationsGet = <ThrowOnError extends boolean = false>(options?: Options<GetConversationsApiV1ConversationsGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetConversationsApiV1ConversationsGetResponses, unknown, ThrowOnError>({
        url: '/api/v1/conversations',
        ...options
    });
};

/**
 * Get Conversation Details
 * Retrieves details of a specific conversation by its ID.
 */
export const getConversationApiV1ConversationsConversationIdGet = <ThrowOnError extends boolean = false>(options: Options<GetConversationApiV1ConversationsConversationIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetConversationApiV1ConversationsConversationIdGetResponses, GetConversationApiV1ConversationsConversationIdGetErrors, ThrowOnError>({
        url: '/api/v1/conversations/{conversation_id}',
        ...options
    });
};

/**
 * Generate Completion
 * Generates a completion based on the provided input.
 */
export const generateCompletionApiV1CompletionPost = <ThrowOnError extends boolean = false>(options: Options<GenerateCompletionApiV1CompletionPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<GenerateCompletionApiV1CompletionPostResponses, GenerateCompletionApiV1CompletionPostErrors, ThrowOnError>({
        url: '/api/v1/completion',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Upload File
 * ## Retrieve a list of recommendations for the user.
 *
 * This endpoint fetches a list of recommendations tailored for the user
 * based on their profile and preferences.
 * It returns a list of `RecommendationMaster` objects, each containing details about the recommendation such as title, description, creation date, and associated departments.
 */
export const uploadFileApiV1FilesUploadPost = <ThrowOnError extends boolean = false>(options: Options<UploadFileApiV1FilesUploadPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<UploadFileApiV1FilesUploadPostResponses, UploadFileApiV1FilesUploadPostErrors, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/api/v1/files/upload',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

/**
 * Get Files
 * This endpoint allows users to retrieve a list of files they have uploaded to the server.
 */
export const getFilesApiV1FilesGet = <ThrowOnError extends boolean = false>(options?: Options<GetFilesApiV1FilesGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetFilesApiV1FilesGetResponses, unknown, ThrowOnError>({
        url: '/api/v1/files',
        ...options
    });
};

/**
 * Vectorize Files
 * This endpoint allows users to vectorize their uploaded files.
 */
export const vectorizeFilesApiV1FilesFileIdVectorizePost = <ThrowOnError extends boolean = false>(options: Options<VectorizeFilesApiV1FilesFileIdVectorizePostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<VectorizeFilesApiV1FilesFileIdVectorizePostResponses, VectorizeFilesApiV1FilesFileIdVectorizePostErrors, ThrowOnError>({
        url: '/api/v1/files{file_id}/vectorize',
        ...options
    });
};

/**
 * Explore Agents in Marketplace
 * ## Explore Agents in Marketplace
 *
 * This api lets user explore agents available in the marketplace.
 * It supports pagination and searching by agent name or tags.
 */
export const getAvailableAgentsApiV1AgentsGet = <ThrowOnError extends boolean = false>(options?: Options<GetAvailableAgentsApiV1AgentsGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetAvailableAgentsApiV1AgentsGetResponses, GetAvailableAgentsApiV1AgentsGetErrors, ThrowOnError>({
        url: '/api/v1/agents',
        ...options
    });
};

/**
 * Get Agent Details
 * Retrieves details of a specific agent by its ID.
 */
export const getAgentApiV1AgentsAgentIdVersionAgentVersionGet = <ThrowOnError extends boolean = false>(options: Options<GetAgentApiV1AgentsAgentIdVersionAgentVersionGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAgentApiV1AgentsAgentIdVersionAgentVersionGetResponses, GetAgentApiV1AgentsAgentIdVersionAgentVersionGetErrors, ThrowOnError>({
        url: '/api/v1/agents/{agent_id}/version/{agent_version}',
        ...options
    });
};

/**
 * Publish Agent
 * Publishes a new agent to the marketplace.
 */
export const publishAgentApiV1AgentsPublishPost = <ThrowOnError extends boolean = false>(options: Options<PublishAgentApiV1AgentsPublishPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PublishAgentApiV1AgentsPublishPostResponses, PublishAgentApiV1AgentsPublishPostErrors, ThrowOnError>({
        url: '/api/v1/agents/publish',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Modify Agent
 * Modifies a new agent to the marketplace.
 */
export const modifyAgentApiV1AgentsAgentIdPut = <ThrowOnError extends boolean = false>(options: Options<ModifyAgentApiV1AgentsAgentIdPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<ModifyAgentApiV1AgentsAgentIdPutResponses, ModifyAgentApiV1AgentsAgentIdPutErrors, ThrowOnError>({
        url: '/api/v1/agents/{agent_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Recommendations
 * ## Retrieve a list of recommendations for the user.
 *
 * This endpoint fetches a list of recommendations tailored for the user
 * based on their profile and preferences.
 * It returns a list of `RecommendationMaster` objects, each containing details about the recommendation such as title, description, creation date, and associated departments.
 */
export const getRecommendationsApiV1RecommendationsGet = <ThrowOnError extends boolean = false>(options?: Options<GetRecommendationsApiV1RecommendationsGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetRecommendationsApiV1RecommendationsGetResponses, unknown, ThrowOnError>({
        url: '/api/v1/recommendations',
        ...options
    });
};

/**
 * Create Recommendation
 * ## Create a new recommendation.
 *
 * This endpoint allows users to create a new recommendation by providing the necessary details.
 * It returns the created `Recommendation` object.
 */
export const createRecommendationApiV1RecommendationsPost = <ThrowOnError extends boolean = false>(options: Options<CreateRecommendationApiV1RecommendationsPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateRecommendationApiV1RecommendationsPostResponses, CreateRecommendationApiV1RecommendationsPostErrors, ThrowOnError>({
        url: '/api/v1/recommendations',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete Recommendation
 * ## Delete a recommendation by its ID.
 * This endpoint allows users to delete a recommendation by providing its ID.
 */
export const deleteRecommendationApiV1RecommendationsRecommendationIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteRecommendationApiV1RecommendationsRecommendationIdDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteRecommendationApiV1RecommendationsRecommendationIdDeleteResponses, DeleteRecommendationApiV1RecommendationsRecommendationIdDeleteErrors, ThrowOnError>({
        url: '/api/v1/recommendations/{recommendation_id}',
        ...options
    });
};

/**
 * Get Recommendation by ID
 * ## Retrieve a specific recommendation by its ID.
 *
 * This endpoint fetches a recommendation based on the provided `recommendation_id`.
 * It returns a `Recommendation` object containing details about the recommendation such as title, description, creation
 */
export const getRecommendationByIdApiV1RecommendationsRecommendationIdGet = <ThrowOnError extends boolean = false>(options: Options<GetRecommendationByIdApiV1RecommendationsRecommendationIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetRecommendationByIdApiV1RecommendationsRecommendationIdGetResponses, GetRecommendationByIdApiV1RecommendationsRecommendationIdGetErrors, ThrowOnError>({
        url: '/api/v1/recommendations/{recommendation_id}',
        ...options
    });
};

/**
 * Chat With Recommended Agent
 * ## Interact with an agent to create a recommendation.
 *
 * This endpoint allows users to interact with a specific agent to create a recommendation.
 * It streams the response back as a `StreamingResponse` object, allowing for real-time updates during the interaction.
 * The agent's ID is provided in the URL path, and the request body contains the necessary details for the interaction.
 */
export const chatCompletionWithAgentApiV1RecommendationsRecommendationIdCompletionPost = <ThrowOnError extends boolean = false>(options: Options<ChatCompletionWithAgentApiV1RecommendationsRecommendationIdCompletionPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<ChatCompletionWithAgentApiV1RecommendationsRecommendationIdCompletionPostResponses, ChatCompletionWithAgentApiV1RecommendationsRecommendationIdCompletionPostErrors, ThrowOnError>({
        url: '/api/v1/recommendations/{recommendation_id}/completion',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Recommendation Conversations
 * ## Interact with an agent to create a recommendation.
 *
 * This endpoint allows users to interact with a specific agent to create a recommendation.
 * It streams the response back as a `StreamingResponse` object, allowing for real-time updates during the interaction.
 * The agent's ID is provided in the URL path, and the request body contains the necessary details for the interaction.
 */
export const getConversationByRecommendationApiV1RecommendationsRecommendationIdConversationsGet = <ThrowOnError extends boolean = false>(options: Options<GetConversationByRecommendationApiV1RecommendationsRecommendationIdConversationsGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetConversationByRecommendationApiV1RecommendationsRecommendationIdConversationsGetResponses, GetConversationByRecommendationApiV1RecommendationsRecommendationIdConversationsGetErrors, ThrowOnError>({
        url: '/api/v1/recommendations/{recommendation_id}/conversations',
        ...options
    });
};