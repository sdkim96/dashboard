// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { ReadRootGetData, ReadRootGetResponses, GetMeApiV1UserGetData, GetMeApiV1UserGetResponses, GetConversationsApiV1ConversationsGetData, GetConversationsApiV1ConversationsGetResponses, GetConversationApiV1ConversationsConversationIdGetData, GetConversationApiV1ConversationsConversationIdGetResponses, GetConversationApiV1ConversationsConversationIdGetErrors, GetAvailableAgentsApiV1AgentsGetData, GetAvailableAgentsApiV1AgentsGetResponses, GetAvailableAgentsApiV1AgentsGetErrors, GetAgentApiV1AgentsAgentIdVersionAgentVersionGetData, GetAgentApiV1AgentsAgentIdVersionAgentVersionGetResponses, GetAgentApiV1AgentsAgentIdVersionAgentVersionGetErrors, SubscribeAgentApiV1AgentsAgentIdVersionAgentVersionSubscribePostData, SubscribeAgentApiV1AgentsAgentIdVersionAgentVersionSubscribePostResponses, SubscribeAgentApiV1AgentsAgentIdVersionAgentVersionSubscribePostErrors, PublishAgentApiV1AgentsPublishPostData, PublishAgentApiV1AgentsPublishPostResponses, PublishAgentApiV1AgentsPublishPostErrors, ModifyAgentApiV1AgentsAgentIdPutData, ModifyAgentApiV1AgentsAgentIdPutResponses, ModifyAgentApiV1AgentsAgentIdPutErrors, GenerateCompletionApiV1CompletionPostData, GenerateCompletionApiV1CompletionPostResponses, GenerateCompletionApiV1CompletionPostErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Root Endpoint
 * Welcome endpoint for the API. Returns a welcome message.
 */
export const readRootGet = <ThrowOnError extends boolean = false>(options?: Options<ReadRootGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ReadRootGetResponses, unknown, ThrowOnError>({
        url: '/',
        ...options
    });
};

/**
 * Get User Information
 * Retrieves information about the current user.
 */
export const getMeApiV1UserGet = <ThrowOnError extends boolean = false>(options?: Options<GetMeApiV1UserGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetMeApiV1UserGetResponses, unknown, ThrowOnError>({
        url: '/api/v1/user',
        ...options
    });
};

/**
 * Get User Conversations
 * Retrieves Conversations for the current user.
 */
export const getConversationsApiV1ConversationsGet = <ThrowOnError extends boolean = false>(options?: Options<GetConversationsApiV1ConversationsGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetConversationsApiV1ConversationsGetResponses, unknown, ThrowOnError>({
        url: '/api/v1/conversations',
        ...options
    });
};

/**
 * Get Conversation Details
 * Retrieves details of a specific conversation by its ID.
 */
export const getConversationApiV1ConversationsConversationIdGet = <ThrowOnError extends boolean = false>(options: Options<GetConversationApiV1ConversationsConversationIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetConversationApiV1ConversationsConversationIdGetResponses, GetConversationApiV1ConversationsConversationIdGetErrors, ThrowOnError>({
        url: '/api/v1/conversations/{conversation_id}',
        ...options
    });
};

/**
 * Explore Agents in Marketplace
 * ## Explore Agents in Marketplace
 *
 * This api lets user explore agents available in the marketplace.
 * It supports pagination and searching by agent name or tags.
 */
export const getAvailableAgentsApiV1AgentsGet = <ThrowOnError extends boolean = false>(options?: Options<GetAvailableAgentsApiV1AgentsGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetAvailableAgentsApiV1AgentsGetResponses, GetAvailableAgentsApiV1AgentsGetErrors, ThrowOnError>({
        url: '/api/v1/agents',
        ...options
    });
};

/**
 * Get Agent Details
 * Retrieves details of a specific agent by its ID.
 */
export const getAgentApiV1AgentsAgentIdVersionAgentVersionGet = <ThrowOnError extends boolean = false>(options: Options<GetAgentApiV1AgentsAgentIdVersionAgentVersionGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAgentApiV1AgentsAgentIdVersionAgentVersionGetResponses, GetAgentApiV1AgentsAgentIdVersionAgentVersionGetErrors, ThrowOnError>({
        url: '/api/v1/agents/{agent_id}/version/{agent_version}',
        ...options
    });
};

/**
 * Subscribe to Agent
 * Subscribes to an agent by its ID.
 */
export const subscribeAgentApiV1AgentsAgentIdVersionAgentVersionSubscribePost = <ThrowOnError extends boolean = false>(options: Options<SubscribeAgentApiV1AgentsAgentIdVersionAgentVersionSubscribePostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<SubscribeAgentApiV1AgentsAgentIdVersionAgentVersionSubscribePostResponses, SubscribeAgentApiV1AgentsAgentIdVersionAgentVersionSubscribePostErrors, ThrowOnError>({
        url: '/api/v1/agents/{agent_id}/version/{agent_version}/subscribe',
        ...options
    });
};

/**
 * Publish Agent
 * Publishes a new agent to the marketplace.
 */
export const publishAgentApiV1AgentsPublishPost = <ThrowOnError extends boolean = false>(options: Options<PublishAgentApiV1AgentsPublishPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PublishAgentApiV1AgentsPublishPostResponses, PublishAgentApiV1AgentsPublishPostErrors, ThrowOnError>({
        url: '/api/v1/agents/publish',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Modify Agent
 * Modifies a new agent to the marketplace.
 */
export const modifyAgentApiV1AgentsAgentIdPut = <ThrowOnError extends boolean = false>(options: Options<ModifyAgentApiV1AgentsAgentIdPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<ModifyAgentApiV1AgentsAgentIdPutResponses, ModifyAgentApiV1AgentsAgentIdPutErrors, ThrowOnError>({
        url: '/api/v1/agents/{agent_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Generate Completion
 * Generates a completion based on the provided input.
 */
export const generateCompletionApiV1CompletionPost = <ThrowOnError extends boolean = false>(options: Options<GenerateCompletionApiV1CompletionPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<GenerateCompletionApiV1CompletionPostResponses, GenerateCompletionApiV1CompletionPostErrors, ThrowOnError>({
        url: '/api/v1/completion',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};